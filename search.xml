<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[最完善的markdown转html/pdf方法、带目录生成]]></title>
    <url>%2F2019%2F07%2F04%2Fmarkdown%E8%BD%AChtml%E3%80%81pdf-%E5%B8%A6%E7%9B%AE%E5%BD%95%E7%94%9F%E6%88%90%2F</url>
    <content type="text"><![CDATA[最近小编需要写个SDK接入文档，用word调格式当然不如markdown来的舒服，写起来舒服了，但是.md没办法直接看效果，最终萌生出把markdown转成html形式的想法。 网上markdown转换html的方法有很多，包括在线转换和借助工具，最终小编选择了VisualStudio Code的插件Markdown Preview Enhanced。 目录 1.在线转换的网站 2.借助工具 2.1 typora 2.2 i5ting_toc 2.3 VisualStudio Code插件 插件1：copy Markdown as HTML 插件2：Markdown+Math 插件3：Markdown Preview Enhanced （推荐） 1.在线转换的网站 http://www.bejson.com/convert/html2markdown/ ：不支持表格，不推荐 http://www.atool9.com/html2markdown.php ：不支持表格，不推荐 https://www.zai17.com/md2html/ ：```{代码}```包含的代码处理不太理想，不推荐 https://github.com/markedjs/marked ：转换结果比较理想，渲染需更改。可以用Demo Page查看效果。渲染可以使用github-markdown-css，github风格。 …（在线的还有很多，反正小编没有找到理想的） 2.借助工具2.1 typora官网下载。很多人说好用。Q@Q原谅小编没使明白。 2.2 i5ting_toc==解析渲染ok，可自动生成侧边目录，不可以编写过程中实时预览，生成的侧边栏不更改本身.md文件，附带的样式太多。==依赖Node环境，通过npm install i5ting_toc -g安装，等待安装完成。 输入i5ting_toc -h回车查看帮助。 转换html，输入i5ting_toc -f [需要转换文件名].md默认在同级目录生成preview文件夹，打开preview下的同名.html文件或者直接i5ting_toc -o可预览。 2.3 VisualStudio Code插件需要先安装VisualStudio Code。右键.md选择打开方式为VisualStudio Code。下载插件转换。 插件1：copy Markdown as HTMLCtrl+Shift+P（MacOS：cmd+shift+p）呼出命令面板。输入markdown:copy as html选中，复制到剪切板，新建一个.html文件，粘贴修改。转换结果比较理想，渲染需更改 插件2：Markdown+MathCtrl+Shift+P（MacOS：cmd+shift+p）呼出命令面板。输入markdown:clip markdown+math to html选中，同样复制到剪切板，需要新建一个.html文件，粘贴修改。转换结果比较理想，渲染需更改 插件3：Markdown Preview Enhanced （推荐）历经千辛万苦，小编终于找到了懒人的福音，可以一键生成目录、输出html/pdf的强大markdown插件–Markdown Preview Enhanced。详细用法点击查看官网。 多种特性： 自动编辑器及预览滑动同步 可导出的格式：漂亮的html、pandoc、电子书、幻灯片、PDF、 PNG、JPEG 。。 支持LaTeX 数学、流程图 / 时序图 以及各种其他种类的图形，嵌入 LaTeX, 渲染 TikZ, Chemfig 等图形 支持自定义预览 CSS 生成目录。（TOC 生成） … 这里小编介绍一下目录生成及输出html。首先安装插件：点击侧边栏最后一个Extensions，在搜索框输入Markdown Preview Enhanced，点击Install等待安装完成。 打开需要转换的.md文件，右键选择打开同步预览。 生成目录：详细讲解 光标放置想要生成目录的输出位置，Ctrl+Shift+P（MacOS：cmd+shift+p）呼出命令面板，输入Markdown Preview Enhanced: Create Toc会生成一段类似然后Ctrl+s保存，就会生成目录。==注意：必须要在预览打开的情况下生成操作，保存才能更新。== 输出html：在右侧的预览界面，右键点击选择HTML-&gt;HTML(offline)。在当前.md文件的同级目录会生成一个同名.html文件，解析渲染都理想~ ——————本文结束——————~生成的html是你想要的样式吗？或者你有更好的方法欢迎联系我~ 更多好文欢迎关注我的公众号：]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hexo--GitHub Pages部署]]></title>
    <url>%2F2019%2F03%2F22%2FHexo-GitHub-Pages%E9%83%A8%E7%BD%B2%2F</url>
    <content type="text"><![CDATA[部署到GitHub Pages请先准备一个GitHub账号，没有的话，出门右转浏览器地址栏输入：https://github.com/ Sign Up开始注册 有Git账号的准备新建仓库：https://github.com/new Repository name建议填自己用户名Owner带上.github.io 注意两点： 仓库名为[Owner].github.io时才可以通过https://[Owner].github.io访问，如果不是则需要按照原来的仓库形式，即Git地址+用户名+仓库名 仓库权限必须为Public 在Hexo项目配置文件_config.yml中，拉到底部，找到deploy配置字段，1234567# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repository: #前面创建的仓库地址 branch: master message: #描述 运行hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy，没设置全局用户名的可能需要输入Git用户名密码。 等待一段时间~ 完成后在仓库的Settings中，配置Source为master branch就能通过https://[Owner].github.io访问啦~ 配置域名访问在腾讯云域名（https://www.qcloud.com/act/event/dnspod_baidu?!preview ）或阿里云域名（https://wanwang.aliyun.com/domain/?spm=a2c4g.11174283.2.1.789dc8caQX0KM1 ）购买一个域名登陆管理后台，配置云解析，添加记录将想要的前缀配置CNAME规则到git域名[Owner].github.io在仓库的Settings中GitHub Pages的Custom domain填入配置的前缀+域名即可。Enforce HTTPS会强制域名访问的时候也是通过https。]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Hexo--博客搭建]]></title>
    <url>%2F2019%2F03%2F22%2FHexo--%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[本站的博客搭建采用Hexo+NexT主题，部署在GitHub Pages。下面手把手带你搭建免费高效的博客系统~ 简介Hexo–快速、简洁且高效的博客框架，基于NodeJS环境。 超快速度Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。 支持 MarkdownHexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。 一键部署只需一条指令即可部署到 GitHub Pages, Heroku 或其他网站。 丰富的插件Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade, CoffeeScript。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 安装安装前提： NodeJS环境：下载地址 Git：Windows | Mac 安装Hexo：1npm install -g hexo-cli 具体的安装过程的问题，这里不再过多提及。官方安装文档：https://hexo.io/zh-cn/docs/ 建站新建文件夹创建项目：123hexo init &lt;folder&gt;cd &lt;folder&gt;npm install 若需要在当前文件夹直接创建，在当前目录下hexo init。 Hexo项目目录结构：12345678.├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes _config.yml：网站的配置信息。官方配置文档：https://hexo.io/zh-cn/docs/configuration。 package.json：应用程序的信息。 scaffolds：模版文件夹。当您新建文章时，Hexo 会根据scaffold来建立文件。官方模板配置文档：https://hexo.io/zh-cn/docs/templates source：资源文件夹是存放用户资源的地方。除 _posts 文件夹之外，开头命名为 _ (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。 themes：主题文件夹。Hexo 会根据主题来生成静态页面。 项目下的_config.yml为项目配置文件，主题下的_config.yml为主题配置文件。 执行1hexo generate &amp;&amp; hexo server --debug 即可在本地http://localhost:4000/ 查看默认的网站样式啦~ 命令新建网站项目1hexo init [folder] 如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站。 新建文章1hexo new [layout] &lt;title&gt; 如果没有设置 layout 的话，默认使用 网站配置_config.yml 中的 default_layout 参数代替。 如果标题包含空格的话，请使用引号括起来。 也可以简写：hexo n [layout] &lt;title&gt; 生成静态文件1hexo generate -d, –deploy 文件生成后立即部署网站 -w, –watch 监视文件变动 也可以简写：hexo g 本地启动服务器1hexo server 默认情况下，访问网址为： http://localhost:4000/。 -p, –port 重设端口 -s, –static 只使用静态文件 -l, –log 启动日记记录，使用覆盖记录格式 也可以简写：hexo s 线上部署1hexo deploy -g, –generate 部署之前预先生成静态文件 也可以简写：hexo d 部署到GitHub Pages请看这篇文章~ 清除缓存文件和已生成的静态文件1hexo clean 清除缓存文件 (db.json) 和已生成的静态文件 (public)。 在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。 更改配置文件_config.yml后需要运行该命令。不然可能会报Unhandled rejection Error: ENOENT: no such file or directory, open &#39;**&#39;。 主题Hexo的默认主题是landscape，官方推荐主题：https://hexo.io/themes/ 本博客网站使用的主题是NexT.Pisces如需要v6及以上的，请看新仓库https://github.com/theme-next/hexo-theme-next 安装先从git将主题拉下来，在项目下1git clone https://github.com/iissnan/hexo-theme-next themes/next 在项目配置文件_config.yml中查找theme，修改值为theme: next。（注意next前的空格哦） 然后hexo clean &amp;&amp; hexo generate &amp;&amp; hexo server --debug就能看见next主题的默认样式啦 选择NexT.Pisces需要在themes/next下的主题配置文件_config.yml中查找scheme，修改值为scheme: Pisces再运行上面的重新启动，就能看到样式啦 安装Hexo和Next主题到此就结束啦~ 要说的话建议在项目下package.json中配置开发运行脚本和部署脚本，在最外层json中添加：1234"scripts": &#123; "dev": "hexo clean &amp;&amp; hexo generate &amp;&amp; hexo server --debug", "start": "hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy" &#125;, 以后开发运行npm run dev就好啦。线上部署使用npm run start。]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[webstorm .swig文件语法高亮]]></title>
    <url>%2F2019%2F03%2F07%2Fwebstorm-swig%E6%96%87%E4%BB%B6%E8%AF%AD%E6%B3%95%E9%AB%98%E4%BA%AE%2F</url>
    <content type="text"><![CDATA[前言swig是nodeJS前端模板引擎，swig特点看这里。 语法高亮webstrom（1）在File&gt;Settings&gt;Plugins，选择下方 Browse repositories... （2）在编辑框输入 twig，点击 Twig Support，Install之后重启webstorm （3）重启后，打开File&gt;Settings&gt;Editor&gt;File Types，找到Twig，点击+号添加*.swig，apply后就能看到.swig都高亮啦~]]></content>
      <tags>
        <tag>.swig</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git出现The following problems have occurred when adding the files: *** is in submodule]]></title>
    <url>%2F2019%2F03%2F06%2Fgit%E5%87%BA%E7%8E%B0The-following-problems-have-occurred-when-adding-the-files-is-in-submodule%2F</url>
    <content type="text"><![CDATA[前言开始搭建博客的时候，使用到Next主题1git clone https://github.com/iissnan/hexo-theme-next themes/next clone下的项目内包含.git隐藏文件，删除后，更改主题的代码后提交报错，手动git add依然报错The following problems have occurred when adding the files: *** is in submodule 解决这是因为本来是其他git项目，需要清除缓存记录。1git rm -rf --cached themes/next 运行上面的代码之后，再git add就不会报错啦~]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android P报java.net.UnknownServiceException: CLEARTEXT communication to *** not permitted by netwo...]]></title>
    <url>%2F2019%2F03%2F06%2FAndroid-P%E6%8A%A5java-net-UnknownServiceException-CLEARTEXT-communication-to-not-permitted-by-netwo%2F</url>
    <content type="text"><![CDATA[原因由于 Android P 限制了明文流量的网络请求，非加密的流量请求都会被系统禁止掉。 如果当前应用的请求是 htttp 请求，而非 https ,这样就会导系统禁止当前应用进行该请求，如果 WebView 的 url 用 http 协议，同样会出现加载失败，https 不受影响。 为此，OkHttp3 做了检查，所以如果使用了明文流量，默认情况下，在 Android P 版本 OkHttp3 就抛出异常: CLEARTEXT communication to *** not permitted by network security policy 解决办法（任选一个）1.在 res 下新建一个 xml目录，然后创建一个名为：network_security_config.xml 文件 ，该文件内容如下：1234&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;network-security-config&gt; &lt;base-config cleartextTrafficPermitted="true" /&gt;&lt;/network-security-config&gt; 然后在 AndroidManifest.xml application 标签内应用上面的xml配置：android:networkSecurityConfig=&quot;@xml/network_security_config&quot;123456&lt;application android:name=".app.App" android:allowBackup="true" android:icon="@mipmap/ic_launcher" android:networkSecurityConfig="@xml/network_security_config" android:label="@string/app_name" android:theme="@style/AppTheme"&gt; 2.服务器和本地应用都改用 https 3.targetSdkVersion 降级回到 27]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android P</tag>
      </tags>
  </entry>
</search>
